TODO
====

This is just a collection of ideas. Care to comment?

* Query +CMEE, set it to 1 to receive CMS/CME ERROR messages,
  reset it to old value.

* Add another option "-v|--verbose", which will query and output
  modem type, net the modem is logged into and other trivia.

* Some kind of localisation?
  I'd prefer to keep this little script as selfcontained as possible,
  so I probably won't build some gettext()/.po-file infrastructure.
  But as there are not _that_ many user visible messages, I can
  imagine some internal support for English/German/French/Spanish
  messages. Of course, the actual translation (apart from English
  and German) would have to be done by someone else...

* Some more research: Right now, I deal with USSD queries as 
  "one shot" commands. I send a query, receive an answer and that's 
  it. But my docs suggest that more is possible; have a look at
  dev/ussd-response-types.txt.
  There are applications being run via USSD codes. Sending a 
  type 2 CUSD command cancels a USSD session, this might be 
  interesting for someone.


DONE
====

* Added support and Makefile targets for 
  - .tar.gz archives
  - .deb packages,
  - .rpm packages
  for an even easier installation.

* Added a small GUI, built around zenity and kdialog: xussd

* CME/CMS ERRORs get translated now, so you'll get
	"Network error: No network service" 
  instead of
	"Network error: 30"

* USSD response types, while still not completely understood, will now
  at least be reported in debug mode.

* After the PIN check/unlocking, gsm-ussd now polls the network
  registration every two seconds for ten times until it runs out
  of tries (and aborts) or it receives messages that the modem
  finally registered in its home net or roaming.

* Checks the USSD queries for legal characters first: /^\*[0-9*]+#$/

* More than one USSD query will now be done if several are given on
  the command line. Every USSD query result will be printed on its 
  own line. 
  Up to v0.2.2, you *could* enter more than one query, but all but the
  first were ignored.


NOT TO DO
=========

These are things I will *not* consider doing to my poor script:

* Get it to run under Windows.
  There's no shortage of tools for this on Windows; furthermore,
  I have absolutely no experience talking to modems on Windows.
  If someone wants to have a try: Substitute "COMx:" for
  "/dev/ttyUSBx" and go from there.

* Get it to send SMSes, set the modem clock, read phone book entries 
  off the SIM, ...
  All of that _can_ be done, of course, but there are already better
  tools for that available. gsm-ussd is supposed to be a one trick
  pony only! 

Jochen Gruse
